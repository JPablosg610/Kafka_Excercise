import streamlit as st
import pandas as pd
import snowflake.connector
import altair as alt

# Conexi칩n a Snowflake
@st.cache_resource
def connect_to_snowflake():
    return snowflake.connector.connect(
        user='TU_USUARIO',
        password='TU_CONTRASE칌A',
        account='TU_CUENTA',
        warehouse='TU_WAREHOUSE',
        database='TU_DATABASE',
        schema='TU_SCHEMA'
    )

# Obtener datos por fecha y tabla
@st.cache_data
def get_data_por_tabla():
    conn = connect_to_snowflake()
    query = """
        SELECT fecha, tabla_origen, COUNT(*) AS conteo
        FROM TU_TABLA
        GROUP BY fecha, tabla_origen
        ORDER BY fecha
    """
    df = pd.read_sql(query, conn)
    conn.close()
    return df

# Obtener datos por fecha y otra dimensi칩n
@st.cache_data
def get_data_por_otro_valor():
    conn = connect_to_snowflake()
    query = """
        SELECT fecha, otra_columna, COUNT(*) AS conteo
        FROM TU_TABLA
        GROUP BY fecha, otra_columna
        ORDER BY fecha
    """
    df = pd.read_sql(query, conn)
    conn.close()
    return df

# Streamlit app
st.title("游늵 Conteo de registros por d칤a")

# Gr치fica 1: por tabla_origen
df1 = get_data_por_tabla()
st.subheader("Registros por d칤a por tabla")
chart1 = alt.Chart(df1).mark_line(point=True).encode(
    x='fecha:T',
    y='conteo:Q',
    color='tabla_origen:N',
    tooltip=['fecha', 'tabla_origen', 'conteo']
).properties(width=700, height=400)

st.altair_chart(chart1, use_container_width=True)

# Gr치fica 2: por otra_columna
df2 = get_data_por_otro_valor()
st.subheader("Registros por d칤a por otro valor")
chart2 = alt.Chart(df2).mark_line(point=True).encode(
    x='fecha:T',
    y='conteo:Q',
    color='otra_columna:N',
    tooltip=['fecha', 'otra_columna', 'conteo']
).properties(width=700, height=400)

st.altair_chart(chart2, use_container_width=True)